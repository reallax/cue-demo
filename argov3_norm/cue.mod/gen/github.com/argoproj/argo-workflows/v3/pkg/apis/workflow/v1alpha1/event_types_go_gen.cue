// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/argoproj/argo-workflows/v3/pkg/apis/workflow/v1alpha1

package v1alpha1

import metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"

// WorkflowEventBinding is the definition of an event resource
// +genclient
// +genclient:noStatus
// +kubebuilder:resource:shortName=wfeb
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
#WorkflowEventBinding: {
	metav1.#TypeMeta
	metadata: metav1.#ObjectMeta        @go(ObjectMeta) @protobuf(1,bytes,opt)
	spec:     #WorkflowEventBindingSpec @go(Spec) @protobuf(2,bytes,opt)
}

// WorkflowEventBindingList is list of event resources
// +kubebuilder:resource:shortName=wfebs
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
#WorkflowEventBindingList: {
	metav1.#TypeMeta
	metadata: metav1.#ListMeta @go(ListMeta) @protobuf(1,bytes,opt)
	items: [...#WorkflowEventBinding] @go(Items,[]WorkflowEventBinding) @protobuf(2,bytes,rep)
}

#WorkflowEventBindingSpec: {
	// Event is the event to bind to
	event: #Event @go(Event) @protobuf(1,bytes,opt)

	// Submit is the workflow template to submit
	submit?: null | #Submit @go(Submit,*Submit) @protobuf(2,bytes,opt)
}

#Event: {
	// Selector (https://github.com/antonmedv/expr) that we must must match the event. E.g. `payload.message == "test"`
	selector: string @go(Selector) @protobuf(1,bytes,opt)
}

#Submit: {
	// WorkflowTemplateRef the workflow template to submit
	workflowTemplateRef: #WorkflowTemplateRef @go(WorkflowTemplateRef) @protobuf(1,bytes,opt)

	// Metadata optional means to customize select fields of the workflow metadata
	metadata?: metav1.#ObjectMeta @go(ObjectMeta) @protobuf(3,bytes,opt)

	// Arguments extracted from the event and then set as arguments to the workflow created.
	arguments?: null | #Arguments @go(Arguments,*Arguments) @protobuf(2,bytes,opt)
}
